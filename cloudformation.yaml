AWSTemplateFormatVersion: '2010-09-09'
Description: 'My cloud'
Resources:
  EngineVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.1.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: '10.1.0.0/16'
  EngineInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
      - Key: Name
        Value: '10.1.0.0/16'
  EngineVPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref EngineVPC
      InternetGatewayId: !Ref EngineInternetGateway
  EngineServiceASubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: '10.1.1.0/24'
      MapPublicIpOnLaunch: true
      VpcId: !Ref EngineVPC
      Tags:
      - Key: Name
        Value: 'Service A subnet'
      - Key: Reach
        Value: public
  EngineDbASubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: '10.1.2.0/24'
      VpcId: !Ref EngineVPC
      Tags:
      - Key: Name
        Value: 'Db A subnet'
      - Key: Reach
        Value: private
  EngineServiceBSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: '10.1.3.0/24'
      MapPublicIpOnLaunch: true
      VpcId: !Ref EngineVPC
      Tags:
      - Key: Name
        Value: 'Service B Subnet'
      - Key: Reach
        Value: public
  EngineDbBSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: '10.1.4.0/24'
      VpcId: !Ref EngineVPC
      Tags:
      - Key: Name
        Value: 'DB B Subnet'
      - Key: Reach
        Value: private
  EngineRouteTablePublic: # should be RouteTableAPublic, but logical id was not changed for backward compatibility
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref EngineVPC
      Tags:
      - Key: Name
        Value: 'Engine Route  Public'
  EngineRouteTablePrivate: # should be RouteTableAPrivate, but logical id was not changed for backward compatibility
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref EngineVPC
      Tags:
      - Key: Name
        Value: 'Engine Route  Private'
  EngineRouteTableAssociationAPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref EngineServiceASubnet
      RouteTableId: !Ref EngineRouteTablePublic
  EngineRouteTableAssociationAPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref EngineDbASubnet
      RouteTableId: !Ref EngineRouteTablePrivate
  EngineRouteTableAssociationBPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref EngineServiceBSubnet
      RouteTableId: !Ref EngineRouteTablePublic
  EngineRouteTableAssociationBPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref EngineDbBSubnet
      RouteTableId: !Ref EngineRouteTablePrivate
  EngineRouteTablePublicInternetRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: EngineVPCGatewayAttachment
    Properties:
      RouteTableId: !Ref EngineRouteTablePublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref EngineInternetGateway
  EngineNetworkAclPublic:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref EngineVPC
      Tags:
      - Key: Name
        Value: Public
  EngineNetworkAclPrivate:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref EngineVPC
      Tags:
      - Key: Name
        Value: Private
  EngineSubnetNetworkAclAssociationAPublic:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref EngineServiceASubnet
      NetworkAclId: !Ref EngineNetworkAclPublic
  EngineSubnetNetworkAclAssociationAPrivate:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref EngineDbASubnet
      NetworkAclId: !Ref EngineNetworkAclPrivate
  EngineSubnetNetworkAclAssociationBPublic:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref EngineServiceBSubnet
      NetworkAclId: !Ref EngineNetworkAclPublic
  EngineSubnetNetworkAclAssociationBPrivate:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref EngineDbBSubnet
      NetworkAclId: !Ref EngineNetworkAclPrivate
  EngineNetworkAclEntryInPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref EngineNetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'
  EngineNetworkAclEntryOutPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref EngineNetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'
  EngineNetworkAclEntryInAPrivateAllowVPC:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref EngineNetworkAclPrivate
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '10.1.1.0/24'
  EngineNetworkAclEntryInBPrivateAllowVPC:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref EngineNetworkAclPrivate
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '10.1.3.0/24'
Outputs:
  TemplateVersion:
    Description: 'Version'
    Value: '0.1.0'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  AZs:
    Description: 'AZs'
    Value: 2
    Export:
      Name: !Sub '${AWS::StackName}-AZs'
  AZA:
    Description: 'AZ of A'
    Value: !Select [0, !GetAZs '']
    Export:
      Name: !Sub '${AWS::StackName}-AZA'
  AZB:
    Description: 'AZ of B'
    Value: !Select [1, !GetAZs '']
    Export:
      Name: !Sub '${AWS::StackName}-AZB'
  CidrBlock:
    Description: 'The set of IP addresses for the VPC.'
    Value: !GetAtt 'EngineVPC.CidrBlock'
    Export:
      Name: !Sub '${AWS::StackName}-CidrBlock'
  VPC:
    Description: 'VPC.'
    Value: !Ref EngineVPC
    Export:
      Name: !Sub '${AWS::StackName}-VPC'
  SubnetsPublic:
    Description: 'Subnets public.'
    Value: !Join [',', [!Ref EngineServiceASubnet, !Ref EngineServiceBSubnet]]
    Export:
      Name: !Sub '${AWS::StackName}-SubnetsPublic'
  SubnetsPrivate:
    Description: 'Subnets private.'
    Value: !Join [',', [!Ref EngineDbASubnet, !Ref EngineDbBSubnet]]
    Export:
      Name: !Sub '${AWS::StackName}-SubnetsPrivate'
  RouteTablesPrivate:
    Description: 'Route tables private.'
    Value: !Ref EngineRouteTablePrivate
    Export:
      Name: !Sub '${AWS::StackName}-RouteTablesPrivate'
  RouteTablesPublic:
    Description: 'Route tables public.'
    Value: !Ref EngineRouteTablePublic
    Export:
      Name: !Sub '${AWS::StackName}-RouteTablesPublic'
  EngineServiceASubnet:
    Description: 'Subnet A public.'
    Value: !Ref EngineServiceASubnet
    Export:
      Name: !Sub '${AWS::StackName}-EngineServiceASubnet'
  EngineDbASubnet:
    Description: 'Engine Subnet A private.'
    Value: !Ref EngineDbASubnet
    Export:
      Name: !Sub '${AWS::StackName}-EngineDbASubnet'
  EngineServiceBSubnet:
    Description: 'Subnet B public.'
    Value: !Ref EngineServiceBSubnet
    Export:
      Name: !Sub '${AWS::StackName}-EngineServiceBSubnet'
  EngineDbBSubnet:
    Description: 'Subnet B private.'
    Value: !Ref EngineDbBSubnet
    Export:
      Name: !Sub '${AWS::StackName}-EngineDbBSubnet'
